{"version":3,"sources":["index.js","Calculator.js"],"names":["ReactDOM","render","StrictMode","document","getElementById","Calculator","props","clearClicked","setState","display","buffer","operatorsUsed","digitClicked","e","input","target","innerText","displayed","state","test","console","log","prev","concat","bind","operatorClicked","calculate","operator","this","consecutiveOperatorsArr","match","consecutiveOperators","sanitizedBuffer","join","lastOperator","substring","length","slice","replace","result","eval","parseFloat","toFixed","operatorUsed","id","className","onClick","React","Component"],"mappings":"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","file":"static/js/main.7cfdedaf.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './Calculator';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport './Calculator.css';\n\n/* If 2 or more operators consecutively, use last operator (excluding the negative (-) sign). 5 + * 7 = 35, yet 5 * - 5 = -25\nEXAMPLE: 3 + 5 x 6 - 2 / 4 = 11.5*/ \nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"0\",\n      buffer: \"\",\n      operatorsUsed: 0\n    }\n    this.clearClicked = this.clearClicked.bind(this);\n    this.digitClicked = this.digitClicked.bind(this);   \n    this.operatorClicked = this.operatorClicked.bind(this);\n    this.calculate = this.calculate.bind(this);\n  }\n  clearClicked = () => {\n    this.setState( {display: \"0\", buffer: \"\", operatorsUsed: 0} );\n  }\n  operatorClicked(e) {\n    let operator = e.target.innerText;  \n    if (operator === \"x\") operator = \"*\";\n    this.setState({display: this.state.display, buffer: this.state.buffer + operator, operatorsUsed: this.state.operatorsUsed+1});         \n  }\n  calculate() {\n    //need loop\n    let consecutiveOperatorsArr = this.state.buffer.match(/[+\\-*/]{2,}/g);\n    let consecutiveOperators = \"\";\n    let sanitizedBuffer=\"\";\n    if (consecutiveOperatorsArr != null ) {\n      consecutiveOperators = consecutiveOperatorsArr.join(\"\");\n      let lastOperator = consecutiveOperators.substring(consecutiveOperators.length-1,consecutiveOperators.length);\n      if (lastOperator === \"-\") {\n        lastOperator = consecutiveOperators.substring(consecutiveOperators.length-2,consecutiveOperators.length-1);\n        consecutiveOperators = consecutiveOperatorsArr.join(\"\").slice(0,-1);\n      }\n      sanitizedBuffer = this.state.buffer.replace(consecutiveOperators,lastOperator);\n    } else {\n      sanitizedBuffer = this.state.buffer;\n    }\n    let result = eval(sanitizedBuffer);\n    result = parseFloat(result.toFixed(10));\n    this.setState( {display: result, buffer: result, operatorUsed: false } );  \n  }\n  digitClicked = (e) => {\n    let input = e.target.innerText;\n    let displayed = this.state.display;\n    if (input === '.' && /\\./.test(displayed)) {\n      console.log(\"too many decimals\");\n    } else {\n      if (displayed != 0 ) {\n        if (this.state.operatorsUsed > 0) {\n          this.setState( (prev) => ({ display: input, buffer: prev.buffer.concat(input), operatorsUsed: 0 } ));\n        } else {\n          this.setState( (prev) => ({ display:prev.display.concat(input), buffer:prev.buffer.concat(input), operatorsUsed:0}));\n        }\n      } else {\n        this.setState({ display: input, buffer: input, operatorsUsed: 0 });\n      }\n    }\n  }  \n  render() {\n    return (\n      <div id=\"container\">\n        <div className=\"row\">\n            <h1>ReactJS Calculator</h1>\n        </div>        \n        <div className=\"flex-container\">\n          <div className=\"row\">\n            <div id=\"display\">{this.state.display}</div>\n          </div>\n          <div className=\"row\">\n            <div id=\"add\"       onClick={this.operatorClicked}>+</div>      \n            <div id=\"subtract\"  onClick={this.operatorClicked}>-</div>          \n            <div id=\"multiply\"  onClick={this.operatorClicked}>x</div>  \n            <div id=\"divide\"    onClick={this.operatorClicked}>/</div>               \n          </div>       \n          <div className=\"row\">\n            <div id=\"seven\" className=\"digits\" onClick={this.digitClicked}>7</div>\n            <div id=\"eight\" className=\"digits\" onClick={this.digitClicked}>8</div>      \n            <div id=\"nine\"  className=\"digits\" onClick={this.digitClicked}>9</div>  \n            <div id=\"clear\" onClick={this.clearClicked}>AC</div>                 \n          </div>\n          <div className=\"row\">\n            <div id=\"four\" className=\"digits\" onClick={this.digitClicked}>4</div>\n            <div id=\"five\" className=\"digits\" onClick={this.digitClicked}>5</div>      \n            <div id=\"six\"  className=\"digits\" onClick={this.digitClicked}>6</div>  \n            <div id=\"blank1\" className=\"digits\" ></div>     \n          </div>    \n          <div className=\"row\">\n            <div id=\"one\"    className=\"digits\" onClick={this.digitClicked}>1</div>  \n            <div id=\"two\"    className=\"digits\" onClick={this.digitClicked}>2</div>      \n            <div id=\"three\"  className=\"digits\" onClick={this.digitClicked}>3</div>\n            <div id=\"equals\" onClick={this.calculate}>=</div>                 \n          </div> \n          <div className=\"row\">\n            <div id=\"blank2\" className=\"digits\" ></div>\n            <div id=\"zero\"    className=\"digits\" onClick={this.digitClicked}>0</div>     \n            <div id=\"decimal\" className=\"digits\" onClick={this.digitClicked}>.</div>  \n            <div id=\"blank3\" className=\"digits\" ></div>             \n          </div>   \n        </div>\n        <div id=\"footer\">by: C.Fung</div>\n      </div>\n    )\n  }\n}\n\nexport default Calculator;\n"],"sourceRoot":""}